name: CI
on:
  push:
    branches:
      - "main"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main ]
jobs:
  compliance:
    uses: splunk/addonfactory-github-workflows/.github/workflows/reusable-components-compliance.yaml@feature/open-source

  code-checks:
    uses: splunk/addonfactory-github-workflows/.github/workflows/reusable-components-code-checks.yaml@feature/open-source
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test-unit:
    name: Unit tests on ${{ matrix.platform }} using Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    continue-on-error: true
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
        platform: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
      - name: Install Code
        run: |
          # shellcheck disable=SC1090
          source "$HOME/.poetry/env"
          poetry install
      - name: Run pytest
        run: |
          # shellcheck disable=SC1090
          source "$HOME/.poetry/env"
          poetry run pytest --junitxml=test-results/junit.xml
      - uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results-unit-python_${{ matrix.python-version }}
          path: test-results/*

  publish:
    uses: splunk/addonfactory-github-workflows/.github/workflows/reusable-components-publish.yaml@feature/open-source
    needs:
      - compliance
      - code-checks
      - test-unit
    secrets:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN_ADMIN }}
      PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
